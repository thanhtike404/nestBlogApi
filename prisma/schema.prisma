generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  username     String    @unique
  passwordHash String
  fullName     String?
  createdAt    DateTime  @default(now())
  bio          String?
  githubUrl    String?
  twitterUrl   String?
  deletedAt    DateTime?
  comments     Comment[]
  posts        Post[]
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  slug       String    @unique
  content    String
  status     Status    @default(DRAFT)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  authorId   Int
  categoryId Int
  seriesId   Int?
  comments   Comment[]
  images     Image[]
  author     User      @relation(fields: [authorId], references: [id])
  category   Category  @relation(fields: [categoryId], references: [id])
  series     Series?   @relation(fields: [seriesId], references: [id])
  tags       Tag[]     @relation("PostToTag")
}

model Series {
  id          Int     @id @default(autoincrement())
  title       String  @unique
  slug        String  @unique
  description String?
  posts       Post[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  authorId  Int
  postId    Int
  parentId  Int?
  author    User      @relation(fields: [authorId], references: [id])
  parent    Comment?  @relation("Replies", fields: [parentId], references: [id], onDelete: Cascade)
  replies   Comment[] @relation("Replies")
  post      Post      @relation(fields: [postId], references: [id])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  posts Post[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  posts Post[] @relation("PostToTag")
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  altText   String?
  createdAt DateTime @default(now())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}
